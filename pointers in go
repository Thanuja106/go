package main

import "fmt"

func main() {
a:=10
var p *int /--------------------orp:=&a
p=&a
*p=90
fmt.Println("the value of %d %d",*p,a)
}
                                                     output:90 90
/-------------------------------------------------------------------------------
package main

import "fmt"

func main() {

var p *int                                                                              var p *int
fmt.Printf("%d ",*p)|                                                                   fmt.Printf("%d ",p)==output is <nil>
}                   |
output:             |
                    |for this
output:panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x488a53]

goroutine 1 [running]:
main.main()
    /home/runner/main.go:8 +0x23
exit status 2
/-------------------------------------------------------------------------------------------
package main

import "fmt"

func main() {
p:=new(int)
fmt.Printf("%d %d",p,*p)
}
output:
824634327056 0
/-------------------------------------------------------------------------------------------------

package main

import "fmt"

func main() {
  
  p:=10
 
  change(p)
fmt.Println(p)
}
func change(a int){
  a=20
  
}

output:10 //here the value will not change 
 /----------------------------------------------------------------------------------------
package main

import "fmt"

func main() {
  
  a:=10
  p:=&a 
  change(p)
fmt.Println(a)
}
func change(a *int){
  *a=20
  }
  output:20//here the value will change
   /----------------------------------------------------------------------------------------
 another way of declaring pointer in function
 package main

import "fmt"

func main() {
  p:=10
  change(&p)
fmt.Println(p)
}
func change(a *int){
  *a=20
  
}
  output:20
  /-------------------------------------------------------------------------------------------------
